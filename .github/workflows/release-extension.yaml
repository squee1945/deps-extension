name: Release Extension

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    permissions:
      contents: write

    runs-on: ubuntu-latest

    strategy:
      matrix:
        os:
          - linux
          - darwin
          - windows
        arch:
          - amd64
          - arm64
        exclude:
          - os: windows
            arch: arm64

    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
      STAGING: staging-${{ matrix.os }}-${{ matrix.arch }}
      RELEASE_ARCHIVE: ${{ matrix.os }}.${{ matrix.arch }}.deps-extension.zip
      MCP_BINARY_NAME: depsmcp


    # strategy:
    #   matrix:
    #     os:
    #     - go: linux
    #       gcli: linux
    #     - go: windows
    #       gcli: windows
    #     - go: darwin
    #       gcli: darwin
    #     arch: [x64, arm64]
    #     # exclude:
    #     #   - os: windows
    #     #     arch: arm64
    #     #   - os: darwin
    #     #     arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25.1

      - name: Create release folder
        run: |
          mkdir -p ${{ env.STAGING }}/commands
          cp gemini-extension.json ${{ env.STAGING }}
          cp commands/*.toml ${{ env.STAGING }}/commands/

      - name: Build binary ${{ matrix.os }}
        run: |
          cd mcp
          go build -o ../${{ env.STAGING }}/${{ env. MCP_BINARY_NAME }}

      - name: Create release archive ${{ env.RELEASE_ARCHIVE }}
        run: |
          mkdir -p release
          zip release/${{ env.RELEASE_ARCHIVE }} ${{ env.STAGING }}/*

      - name: Upload release archive ${{ env.RELEASE_ARCHIVE }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_ARCHIVE }}
          path: release/${{ env.RELEASE_ARCHIVE }}

  create-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Download all release assets
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/**
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    #   - name: Upload release archive ${{ env.RELEASE_ARCHIVE }}
    #     uses: softprops/action-gh-release@v2
    #     with:
    #       files: |
    #         release/${{ env.RELEASE_ARCHIVE }}
